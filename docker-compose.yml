version: '3.8'
services:
  backend:
    build:
      context: ./backend
    container_name: backend-app
    restart: always
    env_file:
      - ./backend/.env
    networks:
      - app-network
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    container_name: frontend-app
    restart: always
    env_file:
      - ./frontend/.env
    networks:
      - app-network

  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: youruser
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: yourdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
